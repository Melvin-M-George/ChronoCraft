<%- include('../partials/user/header') %>

    <style>
        .shipping-address-selection {

            padding-right: 10px;
        }

        .address-box {
            position: relative;
            border: 1px solid #e2e2e2;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .address-box:hover {
            border-color: #424874;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
        }

        .address-radio {
            position: absolute;
            opacity: 0;
        }

        .address-label {
            display: block;
            padding: 1.25rem;
            cursor: pointer;
            margin: 0;
            width: 100%;
        }

        .address-radio:checked+.address-label {
            background-color: #f8fff9;
            border-color: #424874;
        }

        .address-radio:checked+.address-label::before {
            content: 'âœ“';
            position: absolute;
            right: 15px;
            top: 15px;
            color: #424874;
            font-weight: bold;
        }

        .address-type-badge {
            display: inline-block;
            padding: 4px 12px;
            border-radius: 4px;
            font-size: 0.75rem;
            font-weight: 600;
            margin-bottom: 10px;
            text-transform: uppercase;
        }

        .address-type-badge.home {
            background-color: #e8f6ff;
            color: #0084ff;
        }

        .address-type-badge.work {
            background-color: #fff2e5;
            color: #ff6b00;
        }

        .address-type-badge.other {
            background-color: #f0f0f0;
            color: #666;
        }

        .address-content {
            padding-right: 20px;
        }

        .name-section h6 {
            color: #222;
            font-weight: 600;
            font-size: 1rem;
        }

        .address-details p {
            margin-bottom: 0.5rem;
            color: #555;
            font-size: 0.9rem;
        }

        .address-details .landmark {
            color: #666;
            font-style: italic;
        }

        .contact-info {
            margin-top: 8px;
            padding-top: 8px;
            border-top: 1px dashed #eee;
        }

        .contact-info .phone {
            color: #666;
            font-size: 0.9rem;
        }

        .contact-info .alt-phone {
            color: #888;
            font-size: 0.85rem;
        }

        .btn-add-address {
            background-color: #424874;
            color: white;

            padding: 8px 20px;
            border-radius: 6px;
            transition: all 0.3s ease;
        }

        .btn-add-address:hover {
            background-color: #ffffff;
            color: black;
            border-style: solid;
        }

        /* Custom scrollbar for address list */
        .shipping-address-selection::-webkit-scrollbar {
            width: 6px;
        }

        .shipping-address-selection::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 10px;
        }

        .shipping-address-selection::-webkit-scrollbar-thumb {
            background: #c1c1c1;
            border-radius: 10px;
        }

        .shipping-address-selection::-webkit-scrollbar-thumb:hover {
            background: #999;
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            .shipping-address-selection {
                max-height: 300px;
            }

            .address-label {
                padding: 1rem;
            }

            .address-type-badge {
                font-size: 0.7rem;
                padding: 3px 8px;
            }
        }
    </style>

    <main class="main">
        <div class="page-header breadcrumb-wrap">
            <div class="container">
                <div class="breadcrumb">
                    <a href="index.html" rel="nofollow">Home</a>
                    <span></span> Shop
                    <span></span> Checkout
                </div>
            </div>
        </div>
        <section class="mt-50 mb-50">
            <div class="container">

                <div class="row">
                    <div class="col-12">
                        <div class="divider mt-50 mb-50"></div>
                    </div>
                </div>
                <div class="row">


                    <div class="col-md-6">
                        <div class="mb-4">
                            <h5 class="fw-bold">Select Your Address</h5>
                        </div>
                        <div class="form-group">
                            <div class="shipping-address-selection">
                                <% addresses.forEach((address, index)=> { %>
                                    <% address.address.forEach((addr, addrIndex)=> { %>
                                        <div class="address-box mb-3">
                                            <input type="radio" name="selectedAddress"
                                                id="address-<%= index %>-<%= addrIndex %>" value="<%= addr._id %>"
                                                class="address-radio" required>
                                            <label class="address-label" for="address-<%= index %>-<%= addrIndex %>">
                                                <div class="address-type-badge <%= addr.addressType.toLowerCase() %>">
                                                    <%= addr.addressType %>
                                                </div>
                                                <div class="address-content">
                                                    <div class="name-section">
                                                        <h6 class="mb-2">
                                                            <%= addr.name %>
                                                        </h6>
                                                    </div>
                                                    <div class="address-details">
                                                        <% if (addr.landMark) { %>
                                                            <p class="landmark"><i class="fi-rs-marker me-2"></i>
                                                                <%= addr.landMark %>
                                                            </p>
                                                            <% } %>
                                                                <p class="location">
                                                                    <%= addr.city %>, <%= addr.state %>
                                                                            <%= addr.pincode %>
                                                                </p>
                                                                <div class="contact-info">
                                                                    <p class="phone">
                                                                        <i class="fi-rs-phone-call me-2"></i>
                                                                        <%= addr.phone %>
                                                                            <% if (addr.altPhone) { %>
                                                                                <span class="alt-phone">/ <%=
                                                                                        addr.altPhone %></span>
                                                                                <% } %>
                                                                    </p>
                                                                </div>
                                                    </div>
                                                </div>
                                            </label>
                                        </div>
                                        <% }); %>
                                            <% }); %>

                            </div>

                            <div class="add-address-section mt-4">
                                <a href="/addAddress" class="btn btn-add-address">
                                    <i class="fi-rs-plus me-2"></i>Add New Address
                                </a>
                            </div>
                        </div>
                    </div>



                    <div class="col-md-6">
                        <div class="order_review">
                            <div class="mb-20">
                                <h4>Your Orders</h4>
                            </div>
                            <div class="table-responsive order_table text-center">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th colspan="2">Product</th>
                                            <th>Total</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% if(cart && cart.items.length> 0) { %>
                                            <% cart.items.forEach(item=> { %>
                                                <tr>
                                                    <td class="image product-thumbnail">
                                                        <img src="/uploads/re-image/<%= item.productId.productImages[0] %>"
                                                            alt="#">
                                                    </td>
                                                    <td>
                                                        <h5><a href="shop-product-full.html">
                                                                <%= item.productId.productName %>
                                                            </a></h5>
                                                        <span class="product-qty">x <%= item.quantity %></span>
                                                    </td>
                                                    <td>â‚¹<%= item.totalPrice %>
                                                    </td>
                                                </tr>
                                                <% }); %>
                                                    <tr>
                                                        <th>SubTotal</th>
                                                        <td class="product-subtotal" colspan="2">â‚¹<%=
                                                                totalAmount.toLocaleString() %>
                                                        </td>
                                                    </tr>
                                                    <tr>
                                                        <th>Coupon Discount</th>
                                                        <td colspan="2" id="discount"><em>â‚¹ 0</em></td>

                                                    </tr>
                                                    <tr>
                                                        <th>Total</th>
                                                        <td colspan="2" class="product-subtotal" id="finalAmount">
                                                            <span class="font-xl text-brand fw-900">â‚¹<%=
                                                                    totalAmount.toLocaleString() %></span>
                                                        </td>
                                                    </tr>
                                                    <% } else { %>
                                                        <% if (product) { %>
                                                            <tr>
                                                                <td class="image product-thumbnail">
                                                                    <img src="/uploads/re-image/<%= product.productImages[0] %>"
                                                                        alt="<%= product.productName %>">
                                                                </td>
                                                                <td>
                                                                    <h5>
                                                                        <a href="shop-product-full.html">
                                                                            <%= product.productName %>
                                                                        </a>
                                                                    </h5>
                                                                    <span class="product-qty">x&nbsp;<%= qty %></span>
                                                                </td>
                                                                <td>
                                                                    â‚¹<%= totalAmount.toLocaleString() %>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <th>SubTotal</th>
                                                                <td class="product-subtotal" colspan="2">â‚¹<%=
                                                                        totalAmount.toLocaleString() %>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <th>Coupon Discount</th>
                                                                <td colspan="2" id="discount"><em>â‚¹ 0</em></td>

                                                            </tr>
                                                            <tr>
                                                                <th>Total</th>
                                                                <td colspan="2" class="product-subtotal"
                                                                    id="finalAmount">
                                                                    <span class="font-xl text-brand fw-900">â‚¹<%=
                                                                            totalAmount.toLocaleString() %></span>
                                                                </td>
                                                            </tr>
                                                            <% } %>

                                                                <% } %>

                                    </tbody>
                                </table>
                            </div>



                            <div class="row">
                                <div class="col-12">
                                    <div class="divider mt-50 mb-50"></div>
                                </div>
                            </div>


                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="toggle_info">
                                        <span><i class="fi-rs-label mr-10"></i><span class="text-muted">Have a
                                                coupon?</span> <a href="#coupon" data-bs-toggle="collapse"
                                                class="collapsed" aria-expanded="false">Click here to enter your
                                                code</a></span>
                                    </div>
                                    <div class="panel-collapse collapse coupon_form" id="coupon">
                                        <div class="panel-body">
                                            <p class="mb-30 font-sm">If you have a coupon code, please apply it below.
                                            </p>
                                            <form id="coupon-form" method="post" action="/applyCoupon">
                                                <div class="form-group">
                                                    <input type="text" id="couponCode"
                                                        placeholder="Enter Coupon Code...">
                                                </div>
                                                <div class="form-group">
                                                    <button class="btn btn-md" type="submit" id="applyCouponBtn">Apply
                                                        Coupon</button>
                                                    <button class="btn btn-md" type="button" id="removeCouponBtn"
                                                        style="display: none;" onclick="removeCoupon()">Remove
                                                        Coupon</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>

                                    <br>
                                    <div>
                                        <% if(product){ %>

                                            <a href="/couponList?id=<%= product._id %>" class="btn btn-success">Show
                                                Available coupons</a>

                                            <% }else{ %>

                                                <a href="/couponList" class="btn btn-success">Show
                                                    Available coupons</a>

                                                <% } %>
                                    </div>
                                </div>
                            </div>


                            <div class="row">
                                <div class="col-12">
                                    <div class="divider mt-50 mb-50"></div>
                                </div>
                            </div>
                            <div class="row">

                                <form id="orderForm">
                                    <div class="payment_option">
                                        <h4>Select Payment Method</h4>
                                        <br>
                                        <div class="custome-radio">
                                            <input class="form-check-input" required type="radio" value="COD"
                                                name="payment_option" id="exampleRadios3">
                                            <label class="form-check-label" for="exampleRadios3">Cash on
                                                Delivery</label>
                                        </div>
                                        <div class="custome-radio">
                                            <input class="form-check-input" required type="radio" value="online"
                                                name="payment_option" id="exampleRadios5">
                                            <label class="form-check-label" for="exampleRadios5">Online Payment</label>
                                        </div>


                                        <div class="custome-radio">
                                            <input class="form-check-input" required type="radio" value="wallet"
                                                name="payment_option" id="exampleRadios6">
                                            <label class="form-check-label" for="exampleRadios6">Wallet Payment (
                                                Balance: â‚¹<%= walletData.balance %> )</label>

                                        </div>

                                    </div>

                                    <!-- Hidden fields to store cart and totals -->
                                    <input type="hidden" name="cart" value='<%= JSON.stringify(cart) %>'>
                                    <input type="hidden" id="totalamount" name="totalPrice" value="<%= totalAmount%>">
                                    <input type="hidden" id="selectedAddressId" name="addressId">
                                    <input type="hidden" id="discountInput" name="discountInput">
                                    <input type="hidden" id="couponCodeInput" name="couponCodeInput">

                                    <% if (product) { %>
                                        <input type="hidden" name="singleProduct"
                                            value="<%= JSON.stringify(product) %>">
                                        <% } %>


                                            <div id="paymentButtons" class="mt-4">
                                                <button type="button" class="btn btn-fill-out btn-block"
                                                    id="submitButton">Place Order</button>
                                            </div>
                                </form>



                            </div>
                        </div>





                    </div>
                </div>
        </section>
    </main>


    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <script>

        function placeOrderWithWallet() {
            const finalAmount = parseFloat(document.getElementById("totalamount").value.replace(/,/g, ''));
            const discount = parseFloat(document.getElementById('discountInput').value) || 0;
            const addressId = document.getElementById('selectedAddressId').value;
            const couponCode = document.getElementById('couponCode').value || null;
            const singleProduct = document.querySelector('input[name="singleProduct"]') ? document.querySelector('input[name="singleProduct"]').value : null;

            const orderData = {
                cart: document.querySelector('input[name="cart"]').value,
                totalPrice: finalAmount,
                payment_option: 'wallet',
                addressId,
                singleProduct,
                discount,
                totalAmount: finalAmount - discount,
                couponCode
            };

            fetch('/placeOrder', {
                method: "POST",
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(orderData)
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Order placement failed');
                    }
                    return response.json();
                })
                .then(placeOrderData => {
                    window.location.href = `/orderConfirmation?id=${placeOrderData.orderId}`;
                })
                .catch(error => {
                    console.error("Error during wallet order placement:", error);
                    Swal.fire({
                        icon: 'error',
                        title: 'Order Error',
                        text: 'There was an error processing your wallet payment. Please try again.',
                        confirmButtonColor: '#39b4ac',
                    });
                });
        }

        document.querySelectorAll('input[name="payment_option"]').forEach(radio => {
            radio.addEventListener('change', function () {
                console.log("Selected payment method:", this.value);
            });
        });

        document.getElementById('submitButton').addEventListener('click', function () {
            console.log("Submit button clicked");
            validateAndOpenRazorpay('<%= totalAmount %>');
        });

        function validateAndOpenRazorpay(amount) {
            const paymentOption = document.querySelector('input[name="payment_option"]:checked').value;
            console.log("Function called with amount:", amount);
            console.log("Payment option:", paymentOption);

            syncDiscount();

            if (validateAddress()) {
                console.log("Address validation passed");

                if (paymentOption === "online") {
                    console.log("Opening Razorpay");
                    openRazorpay();
                } if (paymentOption === "COD") {
                    validateCOD()
                }
                if (paymentOption === "wallet") {
                    const walletBalance = parseFloat('<%= walletData.balance %>');
                    const totalAmount = parseFloat(document.getElementById('totalamount').value.replace(/,/g, ''));

                    if (walletBalance < totalAmount) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Insufficient Wallet Balance',
                            text: 'Your wallet does not have enough balance to complete this purchase.',
                            confirmButtonText: 'OK',
                        });
                        return false;
                    }
                    // Proceed with wallet payment
                    placeOrderWithWallet();
                }
            } else {
                console.log("Address validation failed");
            }
        }

        function validateCOD() {
            const paymentOption = document.querySelector('input[name="payment_option"]:checked').value;
            const totalAmount = parseFloat(document.getElementById('totalamount').value.replace(/,/g, ''));
            console.log("sdfs")
            if (paymentOption === "COD" && totalAmount > 1000) {
                Swal.fire({
                    icon: 'error',
                    title: 'COD Not Allowed',
                    text: 'Cash on Delivery is not available for orders above â‚¹1000.',
                    confirmButtonText: 'OK',
                });
                return false;
            }
            return true;
        }


        document.getElementById('orderForm').onsubmit = function () {
            return validateAddress();
        };


        if (performance.navigation.type === performance.navigation.TYPE_BACK_FORWARD) {
            window.location.reload();
        }





        //Razorpay

        async function openRazorpay() {
            try {
                const finalAmount = parseFloat(document.getElementById("totalamount").value.replace(/,/g, ''));
                const discount = parseFloat(document.getElementById('discountInput').value) || 0;
                const addressId = document.getElementById('selectedAddressId').value;
                const couponCode = document.getElementById('couponCode').value || null;
                const singleProduct = document.querySelector('input[name="singleProduct"]') ? document.querySelector('input[name="singleProduct"]').value : null;

                const orderData = {
                    cart: document.querySelector('input[name="cart"]').value,
                    totalPrice: finalAmount,
                    payment_option: 'online',
                    addressId,
                    singleProduct,
                    discount,
                    totalAmount: finalAmount - discount,
                    couponCode
                };

                // Place the order
                const placeOrderResponse = await fetch('/placeOrder', {
                    method: "POST",
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(orderData)
                });

                if (!placeOrderResponse.ok) throw new Error('Order placement failed');

                const placeOrderData = await placeOrderResponse.json();

                // Create the payment
                const createPaymentResponse = await fetch('/createPayment', {
                    method: "POST",
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        amount: placeOrderData.finalAmount,
                        discount
                    })
                });

                if (!createPaymentResponse.ok) throw new Error('Payment order creation failed');

                const paymentData = await createPaymentResponse.json();

                if (paymentData.success) {
                    const options = {
                        key: "rzp_test_lK0Qx1aLqyD7Ks",
                        amount: paymentData.order.amount,
                        currency: 'INR',
                        name: "ChronoCraft",
                        description: "Order Payment",
                        order_id: paymentData.order.id,
                        handler: async function (response) {
                            try {
                                const updateResponse = await fetch('/updateOrder', {
                                    method: "POST",
                                    headers: { 'Content-Type': 'application/json' },
                                    body: JSON.stringify({
                                        orderId: placeOrderData.orderId,
                                        paymentId: response.razorpay_payment_id,
                                        razorpayOrderId: response.razorpay_order_id,
                                        signature: response.razorpay_signature,
                                        status: 'Completed'
                                    })
                                });

                                const updateData = await updateResponse.json();

                                if (updateResponse.ok) {
                                    window.location.href = `/orderConfirmation?id=${placeOrderData.orderId}`;
                                } else {
                                    console.error("Order update failed:", updateData);
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Order Update Failed',
                                        text: updateData.message || 'Payment was successful, but updating the order failed. Please contact support.',
                                        confirmButtonColor: '#39b4ac',
                                    });
                                }
                            } catch (error) {
                                console.error("Error updating order:", error);
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Order Update Error',
                                    text: 'Payment was successful, but there was an error updating your order. Please contact support.',
                                    confirmButtonColor: '#39b4ac',
                                });
                            }
                        },
                        prefill: {
                            name: "Your Name",
                            email: "your@example.com",
                            contact: "1234567890"
                        },
                        theme: {
                            color: "#39b4ac"
                        },
                        modal: {
                            ondismiss: async () => {
                                try {
                                    await Swal.fire({
                                        icon: 'error',
                                        title: 'Payment Failed',
                                        text: 'Online payment failed',
                                        toast: true,
                                    });

                                    // const response = await fetch('/ondismiss', {
                                    //     method: 'POST',
                                    //     headers: { 'Content-Type': 'application/json' },
                                    //     body: JSON.stringify({ orderId: placeOrderData.orderId }),
                                    // });

                                    // if (!response.ok) throw new Error('Failed to update stock');

                                    window.location.href = '/';
                                } catch (error) {
                                    console.error('Error during modal dismiss handling:', error);
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: 'Something went wrong while updating the stock.',
                                    });
                                }
                            },
                        }
                    };

                    const razorpay = new Razorpay(options);

                    razorpay.on('payment.failed', async (response) => {
                        console.error("Payment failed:", response.error);

                        Swal.fire({
                            icon: 'error',
                            title: 'Payment Failed',
                            text: 'The payment process failed. Please try again.',
                            confirmButtonColor: '#39b4ac',
                        });

                        try {
                            await fetch('/update-order', {
                                method: "POST",
                                headers: { 'Content-Type': 'application/json' },
                                body: JSON.stringify({
                                    orderId: placeOrderData.orderId,
                                    status: 'Payment Failed',
                                    paymentError: response.error
                                })
                            });
                        } catch (error) {
                            console.error("Error updating order to 'Payment Failed':", error);
                        }
                    });

                    razorpay.open();
                } else {
                    Swal.fire("Error", "Order creation failed", "error");
                }
            } catch (error) {
                console.error("Error during order placement or payment initialization:", error);
                Swal.fire({
                    icon: 'error',
                    title: 'Order or Payment Error',
                    text: 'There was an error processing your order. Please try again.',
                    confirmButtonColor: '#39b4ac',
                });
            }
        }



        function validateAddress() {
            const addressRadioButtons = document.querySelectorAll('input[name="selectedAddress"]');
            let addressSelected = false;

            addressRadioButtons.forEach((radio) => {
                if (radio.checked) {
                    addressSelected = true;
                }
            });

            if (!addressSelected) {
                Swal.fire({
                    icon: 'warning',
                    title: 'No Address Selected',
                    text: 'Please select an address before proceeding.',
                    confirmButtonColor: '#39b4ac',
                });
                return false;
            }

            return true;
        }


        function syncDiscount() {
            const discountDisplay = document.getElementById('discount');
            if (discountDisplay) {
                const discountText = discountDisplay.innerText.replace('â‚¹', '').replace(/,/g, '');
                const discountValue = parseInt(discountText, 10) || 0;
                document.getElementById('discountInput').value = discountValue || 0;
                const coupon = document.getElementById('couponCode').value;
                document.getElementById('couponCodeInput').value = coupon;
            }
        }

        document.querySelectorAll('.address-radio').forEach(radio => {
            radio.addEventListener('change', function () {
                const selectedAddressField = document.getElementById('selectedAddressId');
                selectedAddressField.value = this.value || '';
            });
        });


        // Apply coupon

        function formatPrice(amount) {
            return 'â‚¹ ' + amount.toLocaleString();
        }

        document.getElementById('coupon-form').addEventListener('submit', async (e) => {
            e.preventDefault();

            const couponCode = document.getElementById('couponCode').value;
            const cartTotal = parseInt(document.getElementById('totalamount').value.replace(/[^0-9]/g, ""), 10);

            if (!couponCode) {
                Swal.fire({
                    icon: 'warning',
                    title: 'No Coupon Code',
                    text: 'Please enter a coupon code.',
                    confirmButtonColor: '#39b4ac',
                });
                return;
            }

            try {
                const response = await fetch('/applyCoupon', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ couponCode, cartTotal }),
                });

                const result = await response.json();

                if (response.ok) {

                    document.getElementById('discount').textContent = formatPrice(result.discount);
                    document.getElementById('finalAmount').textContent = formatPrice(result.totalAfterDiscount);

                    Swal.fire({
                        icon: 'success',
                        title: 'Coupon Applied',
                        text: result.message,
                        confirmButtonColor: '#39b4ac',
                    });

                    toggleCouponButtons(true);
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error Applying Coupon',
                        text: result.message,
                        confirmButtonColor: '#39b4ac',
                    });
                }
            } catch (error) {
                console.error('Error applying coupon:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Failed to Apply Coupon',
                    text: 'Please try again.',
                    confirmButtonColor: '#39b4ac',
                });
            }
        });

        // Coupon remove
        function removeCoupon() {
            document.getElementById('couponCode').value = '';
            document.getElementById('discount').textContent = 'â‚¹ 0';
            document.getElementById('finalAmount').textContent = 'â‚¹' + document.getElementById('totalamount').value;

            toggleCouponButtons(false);

            Swal.fire({
                icon: 'success',
                title: 'Coupon Removed',
                text: 'Your coupon has been removed successfully.',
                confirmButtonColor: '#39b4ac',
            });
        }

        function toggleCouponButtons(isCouponApplied) {
            const applyCouponBtn = document.getElementById('applyCouponBtn');
            const removeCouponBtn = document.getElementById('removeCouponBtn');

            if (isCouponApplied) {
                applyCouponBtn.style.display = 'none';
                removeCouponBtn.style.display = 'block';
            } else {
                applyCouponBtn.style.display = 'block';
                removeCouponBtn.style.display = 'none';
            }
        }






    </script>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"></script>


    <%- include('../partials/user/footer') %>