<%- include("../../views/partials/user/header") %>
    <style>
    
        :root {
            --primary-color: #2c3e50;
            --secondary-color: #34495e;
            --accent-color: #424874;
            --success-color: #2ecc71;
            --text-color: #2c3e50;
            --light-bg: #f8f9fa;
            --border-radius: 12px;
            --box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            --transition: all 0.3s ease;
        }
        .custom-button {
            background-color: #DCD6F7; /* Custom button background color */
            color: #424874; /* Text color */
            border-color: #DCD6F7; /* Border color */
            border-width: 1px; /* Optional: define border thickness */
            border-radius: 4px; /* Optional: rounded corners */
            transition: background-color 0.3s ease; /* Smooth hover effect */
        }

        .custom-button:hover {
            background-color: #424874; /* Darker color on hover */
            border-color: #424874; /* Darker border on hover */
        }

        
        .main {
            padding: 40px 0;
            background-color: var(--light-bg);
        }

        
        .page-header.breadcrumb-wrap {
            background: linear-gradient(135deg, #f6f8fa 0%, #f1f4f6 100%);
            padding: 20px 0;
            margin-bottom: 30px;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        }

        .breadcrumb {
            font-family: 'Inter', sans-serif;
            font-size: 14px;
            color: var(--text-color);
        }

        .breadcrumb a {
            color: var(--accent-color);
            text-decoration: none;
            transition: var(--transition);
        }

        .breadcrumb a:hover {
            color: var(--primary-color);
        }

        
        .dashboard-menu {
            background: white;
            border-radius: var(--border-radius);
            padding: 20px;
            box-shadow: var(--box-shadow);
        }

        .dashboard-menu .nav-link {
            color: var(--text-color);
            padding: 12px 20px;
            margin: 5px 0;
            border-radius: 8px;
            transition: var(--transition);
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .dashboard-menu .nav-link:hover,
        .dashboard-menu .nav-link.active {
            background: linear-gradient(135deg, var(--accent-color) 0%, #A6B1E1 100%);
            color: white;
            transform: translateX(5px);
        }

        .dashboard-menu .nav-link i {
            font-size: 18px;
        }

        
        .card {
            background: white;
            border: none;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            transition: var(--transition);
            overflow: hidden;
        }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 15px rgba(0, 0, 0, 0.1);
        }

        .card-header {
            background: var(--primary-color);
            color: white;
            padding: 20px;
            border-bottom: none;
            font-weight: 600;
        }

        .card-body {
            padding: 25px;
        }

        
        .btn {
            padding: 10px 20px;
            border-radius: 8px;
            transition: var(--transition);
            font-weight: 500;
        }

        .btn-success {
            background: var(--success-color);
            border: none;
            color: white;
        }

        .btn-success:hover {
            background: #424874;
            transform: translateY(-2px);
        }

        .btn-primary {
            background: var(--accent-color);
            border: none;
        }

        .btn-primary:hover {
            background: #424874;
            transform: translateY(-2px);
        }
        

        
        .table {
            margin: 0;
        }

        .table thead th {
            background: #f8f9fa;
            color: var(--text-color);
            font-weight: 600;
            border-bottom: 2px solid #eee;
            padding: 15px;
        }

        .table tbody td {
            padding: 15px;
            vertical-align: middle;
            color: #666;
            border-bottom: 1px solid #eee;
        }

       
        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            color: var(--text-color);
            margin-bottom: 8px;
            font-weight: 500;
        }

        .form-control {
            border-radius: 8px;
            border: 1px solid #eee;
            padding: 12px;
            transition: var(--transition);
        }

        .form-control:focus {
            border-color: var(--accent-color);
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.1);
        }

        
        .wallet-amount {
            font-size: 2.5rem;
            font-weight: 700;
            color: var(--primary-color);
            margin: 20px 0;
        }

        
        @media (max-width: 768px) {
            .dashboard-menu {
                margin-bottom: 20px;
            }

            .card-header {
                padding: 15px;
            }

            .card-body {
                padding: 20px;
            }

            .table thead th {
                padding: 12px;
            }

            .table tbody td {
                padding: 12px;
            }
        }
        
        
    </style>


    <main class="main">
        <div class="page-header breadcrumb-wrap mb-3">
            <div class="container">
                <div class="breadcrumb">
                    <a href="#" rel="nofollow">Home</a>
                    <span></span> Profile <span></span> Account
                </div>
            </div>
        </div>
        <section class="pt-10 pb-10">
            <div class="container">
                <div class="row">
                    <div class="col-lg-10 m-auto">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="dashboard-menu">
                                    <ul class="nav flex-column" role="tablist">
                                        <li class="nav-item">
                                            <a class="nav-link active" id="dashboard-tab" data-bs-toggle="tab"
                                                href="#dashboard" role="tab" aria-controls="dashboard"
                                                aria-selected="false">
                                                <i class="fi-rs-settings-sliders mr-10"></i>Dashboard
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" id="address-tab" data-bs-toggle="tab" href="#address"
                                                role="tab" aria-controls="address" aria-selected="true">
                                                <i class="fi-rs-marker mr-10"></i>My Address
                                            </a>
                                        </li>
                                        <li class="nav-item">
                                            <a class="nav-link" id="orders-tab" data-bs-toggle="tab" href="#orders"
                                                role="tab" aria-controls="orders" aria-selected="false">
                                                <i class="fi-rs-shopping-bag mr-10"></i>Orders
                                            </a>
                                        </li>
                                        
                                        <!-- <li class="nav-item">
                                            <a class="nav-link" id="track-orders-tab" data-bs-toggle="tab"
                                                href="#referal" role="tab" aria-controls="track-orders"
                                                aria-selected="false">
                                                <i class="fi-rs-shopping-cart-check mr-10"></i>Referals
                                            </a>
                                        </li> -->
                                        <li class="nav-item">
                                            <a class="nav-link" href="#" onclick="confirmLogout(event)">
                                                <i class="fi-rs-sign-out mr-10"></i>Logout
                                            </a>
                                        </li>
                                        
                                    </ul>
                                </div>
                            </div>
                            <div class="col-md-8">
                                <div class="tab-content dashboard-content">


                                    <div class="tab-pane fade show active" id="dashboard" role="tabpanel" aria-labelledby="dashboard-tab">
                                        <div class="card card-green">
                                            <div class="card-header">
                                                <h5 class="mb-0 text-center">User Profile</h5>
                                            </div>
                                            <div class="card-body text-center">
                                                <h5 class="card-title">
                                                    <%=user.name %>
                                                </h5>
                                                <p class="card-text">
                                                    <strong>Phone:</strong>
                                                    <%=user.phone %>
                                                </p>
                                                <p class="card-text">
                                                    <strong>Email:</strong>
                                                    <%=user.email %>
                                                </p>
                                                <div class="btn-group">
                                                    <a href="/editProfile" class="btn btn-sm btn-primary me-2">Edit Profile</a>
                                                    <a href="/changePassword" class="btn btn-sm btn-success">Change Password</a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>


                                    <div class="tab-pane fade" id="address" role="tabpanel"
                                        aria-labelledby="address-tab">
                                        <div class="row">
                                            <% if(userAddress){ %>
                                                <% userAddress.address.forEach(address=> { %>
                                                    <div class="col-lg-6">
                                                        <div class="card mb-3 mb-lg-0">
                                                            <div class="card-header">
                                                                <h5 class="mb-0">
                                                                    <%=address.addressType %>
                                                                </h5>
                                                            </div>


                                                            <div class="card-body">
                                                                <address>
                                                                    <%=address.name %><br />
                                                                        <%=address.city %><br />
                                                                            <%=address.landMark %><br />
                                                                                <%=address.state %><br />



                                                                </address>
                                                                <p>
                                                                    <%=address.pincode %>
                                                                </p>
                                                                <p>
                                                                    <%=address.phone %>
                                                                </p>
                                                                <p>
                                                                    <%=address.altPhone %>
                                                                </p>

                                                                <br>
                                                                <div class="d-flex justify-content-between">
                                                                    <a href="/editAddress?id=<%=address._id %>"
                                                                        class="btn-small">Edit</a>
                                                                        <a href="javascript:void(0);"
                                                                        class="btn-small"
                                                                        onclick="confirmDelete('<%= address._id %>')">Delete</a>
                                                                     
                                                                </div>

                                                            </div>
                                                        </div>
                                                    </div>
                                                    <% }) %>
                                                        <% }else{ %>
                                                            <div class="col-lg-6">
                                                                <div class="card mb-3 mb-lg-0">
                                                                    <div class="card-header">
                                                                        <h5 class="mb-0"></h5>
                                                                    </div>
                                                                    <div class="card-body">
                                                                        <address>No address</address>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <% } %>

                                                                <div style="margin-top: 30px;">
                                                                    <a href="/addAddress">
                                                                        <button class="btn btn-primary w-70">
                                                                            Add address
                                                                        </button>
                                                                    </a>
                                                                </div>
                                        </div>
                                    </div>


                                    <div class="tab-pane fade" id="orders" role="tabpanel" aria-labelledby="orders-tab">
                                        <div class="card">
                                            <div class="card-header">
                                                <h5 class="mb-0">Your Orders</h5>
                                            </div>
                                            <div class="card-body">
                                                <div class="table-responsive">
                                                    <table class="table table-bordered table-striped">
                                                        <thead>
                                                            <tr>
                                                                <th style="width: 15%">Order</th>
                                                                <th style="width: 15%">Date</th>
                                                                <th style="width: 15%">Order Status</th>
                                                                <th style="width: 15%">Payment Status</th>
                                                                <th style="width: 10%">Total</th>
                                                                <th style="width: 15%">Actions</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                            <% if (orders.length> 0) { %>
                                                                <% orders.forEach(order=> { %>
                                                                    <tr id="order-row-<%= order._id %>">
                                                                        <td>
                                                                            <%= order.orderId %>
                                                                        </td>
                                                                        <td>
                                                                            <%= new Date(order.createdOn).toLocaleDateString() %>
                                                                        </td>
                                                                        <td id="order-status-<%= order._id %>"
                                                                            class="status-<%= order.status.toLowerCase() %>">
                                                                            <%= order.status %>
                                                                        </td>
                                                                        <td id="payment-status-<%= order._id %>"
                                                                            class="status-<%= order.paymentStatus.toLowerCase() %>">
                                                                            <%= order.paymentStatus %>
                                                                        </td>
                                                                        <td>₹ <%= order.finalAmount.toFixed(2) %>
                                                                        </td>
                                                                        <td>
                                                                            <div class="d-flex flex-column">
                                                                                <a href="/orderDetails?id=<%= order._id %>" class="mb-2">View Details</a>
                                                                                <% if (order.status === 'Delivered') { %>
                                                                                    <button class="btn btn-sm custom-button" onclick="confirmReturn('<%= order._id %>')">Return</button>
                                                                                <% } else if (order.paymentStatus === 'Pending' && order.paymentMethod === "online") { %>
                                                                                    <button class="btn btn-sm custom-button" onclick="openRazorpay('<%= JSON.stringify(order) %>')">Retry Payment</button>
                                                                                <% } else if (order.paymentStatus === 'Completed' && order.status === 'Processing') { %>
                                                                                    <button class="btn btn-sm custom-button" onclick="confirmCancelOrder('<%= order._id %>')">Cancel</button>
                                                                                <% } else if (order.status === 'Processing' || order.status === 'Shipped') { %>
                                                                                    <button class="btn btn-sm custom-button" disabled>Return/Cancel Not Available</button>
                                                                                <% } else { %>
                                                                                    <span>--</span>
                                                                                <% } %>
                                                                            </div>
                                                                            
                                                                        </td>
                                                                    </tr>
                                                                <% }) %>
                                                            <% } else { %>
                                                                <tr>
                                                                    <td colspan="6" class="text-center">
                                                                        No orders found.
                                                                    </td>
                                                                </tr>
                                                            <% } %>
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="pagination-area mt-15 mb-50">
                                            <nav aria-label="Page navigation example">
                                                <ul class="pagination justify-content-center">
                                                    <% for (let i=1; i <=totalPages; i++) { %>
                                                        <li class="page-item <%= (i === currentPage) ? 'active' : '' %>">
                                                            <a class="page-link" href="?page=<%= i %>">
                                                                <%= i %>
                                                            </a>
                                                        </li>
                                                    <% } %>
                                                </ul>
                                            </nav>
                                        </div>
                                    </div>


                                    


                                    


                                    <!-- <div class="tab-pane fade" id="referal" role="tabpanel"
                                        aria-labelledby="track-orders-tab">
                                        <div class="card">
                                            <div class="card-header">
                                                <h5 class="mb-0">Referal</h5>
                                            </div>
                                            <div class="card-body">
                                                <h6 class="mb-3">Refer your friends and earn money!</h6>
                                                <p>Share this link: <strong>></strong></p>
                                                <p>Earned: ₹</p>
                                            </div>
                                        </div>
                                    </div> -->
                                </div>
                            </div>
                        </div>
        </section>
    </main>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
        
        async function openRazorpay(order) {
            const orderData = JSON.parse(order);
            try {
               
                

                // Place the order
                const placeOrderResponse = await fetch(`/retryPayment?orderId=${orderData._id}`, {
                    method: "GET",
                });

                if (!placeOrderResponse.ok) throw new Error('Order placement failed');

                const placeOrderData = await placeOrderResponse.json();
                
                // Create the payment
                const createPaymentResponse = await fetch('/createPayment', {
                    method: "POST",
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                        amount: placeOrderData.orderDetails.finalAmount,
                        discount:orderData.discount,
                    })
                });

                if (!createPaymentResponse.ok) throw new Error('Payment order creation failed');

                const paymentData = await createPaymentResponse.json();
                if (paymentData.success) {
                    const options = {
                        key: "rzp_test_lK0Qx1aLqyD7Ks",
                        amount: paymentData.order.amount,
                        currency: 'INR',
                        name: "ChronoCraft",
                        description: "Order Payment",
                        order_id: paymentData.order.id,
                        handler: async function (response) {
                            try {
                                const updateResponse = await fetch('/updateOrder', {
                                    method: "POST",
                                    headers: { 'Content-Type': 'application/json' },
                                    body: JSON.stringify({
                                        orderId: orderData._id,
                                        paymentId: response.razorpay_payment_id,
                                        razorpayOrderId: response.razorpay_order_id,
                                        signature: response.razorpay_signature,
                                        status: 'Completed'
                                    })
                                });

                                const updateData = await updateResponse.json();

                                if (updateResponse.ok) {
                                    window.location.href = `/orderConfirmation?id=${placeOrderData.orderId}`;
                                } else {
                                    console.error("Order update failed:", updateData);
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Order Update Failed',
                                        text: updateData.message || 'Payment was successful, but updating the order failed. Please contact support.',
                                        confirmButtonColor: '#39b4ac',
                                    });
                                }
                            } catch (error) {
                                console.error("Error updating order:", error);
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Order Update Error',
                                    text: 'Payment was successful, but there was an error updating your order. Please contact support.',
                                    confirmButtonColor: '#39b4ac',
                                });
                            }
                        },
                        prefill: {
                            name: "Your Name",
                            email: "your@example.com",
                            contact: "1234567890"
                        },
                        theme: {
                            color: "#39b4ac"
                        },
                        modal: {
                            ondismiss: async () => {
                                try {
                                    await Swal.fire({
                                        icon: 'error',
                                        title: 'Payment Failed',
                                        text: 'Online payment failed',
                                        toast: true,
                                    });

                                    

                                    window.location.href = '/';
                                } catch (error) {
                                    console.error('Error during modal dismiss handling:', error);
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: 'Something went wrong while updating the stock.',
                                    });
                                }
                            },
                        }
                    };

                    const razorpay = new Razorpay(options);

                    razorpay.on('payment.failed', async (response) => {
                        console.error("Payment failed:", response.error);

                        Swal.fire({
                            icon: 'error',
                            title: 'Payment Failed',
                            text: 'The payment process failed. Please try again.',
                            confirmButtonColor: '#39b4ac',
                        });

                        try {
                            await fetch('/update-order', {
                                method: "POST",
                                headers: { 'Content-Type': 'application/json' },
                                body: JSON.stringify({
                                    orderId: placeOrderData.orderId,
                                    status: 'Payment Failed',
                                    paymentError: response.error
                                })
                            });
                        } catch (error) {
                            console.error("Error updating order to 'Payment Failed':", error);
                        }
                    });

                    razorpay.open();
                } else {
                    Swal.fire("Error", "Order creation failed", "error");
                }
            } catch (error) {
                console.error("Error during order placement or payment initialization:", error);
                Swal.fire({
                    icon: 'error',
                    title: 'Order or Payment Error',
                    text: 'There was an error processing your order. Please try again.',
                    confirmButtonColor: '#39b4ac',
                });
            }
        }



function confirmLogout(event) {
    event.preventDefault(); // Prevent the default link action

    Swal.fire({
        title: "Are you sure?",
        text: "You will be logged out of your account.",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, Logout!",
        cancelButtonText: "Cancel",
    }).then((result) => {
        if (result.isConfirmed) {
            // Redirect to the logout route
            window.location.href = "/logout";
        }
    });
}


async function confirmReturn(orderId) {
    try {
        const result = await Swal.fire({
            title: "Return Order?",
            icon: "warning",
            text: "Reason for Returning Product",
            html: `<textarea id="returnReason" class="swal2-textarea" placeholder="Enter your reason here"></textarea>`,
            showCancelButton: true,
            confirmButtonText: 'Submit',
            cancelButtonText: 'Cancel',
            preConfirm: () => {
                const reason = document.getElementById('returnReason').value.trim();
                if (!reason) {
                    Swal.showValidationMessage('Reason cannot be empty');
                }
                return reason;
            }
        });

        if (result.isConfirmed) {
            const reason = result.value;

            const response = await fetch('/returnRequest', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    orderId: orderId,
                    reason: reason,
                }),
            });

            const responseData = await response.json();
            if (response.ok) {
                Swal.fire('Success!', responseData.message, 'success').then(() => {
                    // Reload the page after user clicks "OK"
                    location.reload();
                });
            } else {
                Swal.fire('Error!', responseData.message, 'error');
            }
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire('Error!', 'Something went wrong. Please try again.', 'error');
    }
}



        async function confirmDelete(addressId) {
    const result = await Swal.fire({
        title: "Are you sure?",
        text: "Do you really want to delete this address? This action cannot be undone.",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#d33",
        cancelButtonColor: "#3085d6",
        confirmButtonText: "Yes, delete it!",
    });

    if (result.isConfirmed) {
        window.location.href = `/deleteAddress?id=${addressId}`;
    }
}

    

        function confirmCancelOrder(orderId) {
    Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, cancel it!',
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/cancelOrder?id=${orderId}`, { method: 'POST' })
                .then(response => response.json())
                .then(data => {
                    if (data.message) {
                        Swal.fire({
                            title: 'Cancelled!',
                            text: data.message,
                            icon: 'success',
                            confirmButtonColor: '#3085d6',
                        }).then(() => {
                           
                            window.location.reload(); 
                        });
                    } else {
                        Swal.fire({
                            title: 'Error!',
                            text: 'Failed to cancel the order.',
                            icon: 'error',
                        });
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire({
                        title: 'Error!',
                        text: 'Something went wrong. Please try again.',
                        icon: 'error',
                    });
                });
        }
    });
}

document.addEventListener("DOMContentLoaded", function () {
    const navLinks = document.querySelectorAll(".dashboard-menu .nav-link");
    const tabContents = document.querySelectorAll(".tab-pane");

    const activeTabId = localStorage.getItem("activeDashboardTab");
    if (activeTabId) {
        navLinks.forEach(link => link.classList.remove("active"));
        tabContents.forEach(content => content.classList.remove("active", "show"));

        
        const activeTab = document.getElementById(activeTabId);
        const activeTabContent = document.querySelector(activeTab.getAttribute("href"));

        if (activeTab && activeTabContent) {
            activeTab.classList.add("active");
            activeTabContent.classList.add("active", "show");
        }
    }


    navLinks.forEach(link => {
        link.addEventListener("click", function () {
            localStorage.setItem("activeDashboardTab", this.id);
        });
    });
});


    </script>
    <%- include("../../views/partials/user/footer") %>